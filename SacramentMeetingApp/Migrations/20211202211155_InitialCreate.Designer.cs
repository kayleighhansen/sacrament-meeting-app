// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SacramentMeetingApp.Migrations
{
    [DbContext(typeof(SacramentMeetingContext))]
    [Migration("20211202211155_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0"); 

            modelBuilder.Entity("SacramentMeeting.Models.Bishopric", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Calling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Bishopric");
                });

            modelBuilder.Entity("SacramentMeeting.Models.Hymn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("SacramentMeeting.Models.Meeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("ClosingHymnId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClosingPrayer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConductorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DismissalHymnId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OpeningHymnId")
                        .HasColumnType("bigint");

                    b.Property<string>("OpeningPrayer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PresidingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SacramentHymnId")
                        .HasColumnType("bigint");

                    b.Property<bool>("SpecialMusicNumberName")
                        .HasColumnType("bit");

                    b.Property<bool>("isFastSunday")
                        .HasColumnType("bit");

                    b.Property<bool>("isSpecialMusicNumber")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClosingHymnId");

                    b.HasIndex("ConductorId");

                    b.HasIndex("DismissalHymnId");

                    b.HasIndex("OpeningHymnId");

                    b.HasIndex("PresidingId");

                    b.HasIndex("SacramentHymnId");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SacramentMeeting.Models.Speaker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("SacramentMeeting.Models.Meeting", b =>
                {
                    b.HasOne("SacramentMeeting.Models.Hymn", "ClosingHymn")
                        .WithMany()
                        .HasForeignKey("ClosingHymnId");

                    b.HasOne("SacramentMeeting.Models.Bishopric", "Conductor")
                        .WithMany()
                        .HasForeignKey("ConductorId");

                    b.HasOne("SacramentMeeting.Models.Hymn", "DismissalHymn")
                        .WithMany()
                        .HasForeignKey("DismissalHymnId");

                    b.HasOne("SacramentMeeting.Models.Hymn", "OpeningHymn")
                        .WithMany()
                        .HasForeignKey("OpeningHymnId");

                    b.HasOne("SacramentMeeting.Models.Bishopric", "Presiding")
                        .WithMany()
                        .HasForeignKey("PresidingId");

                    b.HasOne("SacramentMeeting.Models.Hymn", "SacramentHymn")
                        .WithMany()
                        .HasForeignKey("SacramentHymnId");

                    b.Navigation("ClosingHymn");

                    b.Navigation("Conductor");

                    b.Navigation("DismissalHymn");

                    b.Navigation("OpeningHymn");

                    b.Navigation("Presiding");

                    b.Navigation("SacramentHymn");
                });

            modelBuilder.Entity("SacramentMeeting.Models.Speaker", b =>
                {
                    b.HasOne("SacramentMeeting.Models.Meeting", null)
                        .WithMany("Speakers")
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("SacramentMeeting.Models.Meeting", b =>
                {
                    b.Navigation("Speakers");
                });
#pragma warning restore 612, 618
        }
    }
}
